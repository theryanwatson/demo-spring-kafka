# Copyright VMware, Inc.
# SPDX-License-Identifier: APACHE-2.0

version: "2"

services:
  kafka:
    image: docker.io/bitnami/kafka:3.5
    ports:
      - "9091:9091"
      - "9092:9092"
    volumes:
      - "kafka_data:/bitnami"
    environment:
      # KRaft settings
      - KAFKA_CFG_NODE_ID=0
      - KAFKA_CFG_PROCESS_ROLES=controller,broker
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@kafka:9093
      # Listeners
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9091,CONTROLLER://:9093,EXTERNAL://:9092
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://:9091,EXTERNAL://localhost:9092
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,EXTERNAL:PLAINTEXT,PLAINTEXT:PLAINTEXT
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=PLAINTEXT
      - KAFKA_CFG_NUM_PARTITIONS=6
  kafka-setup:
    image: docker.io/bitnami/kafka:3.5
    depends_on:
      - kafka
    restart: "no"
    environment:
      - BOOTSTRAP_SERVER=kafka:9091
      - PARTITION_COUNT=6
    entrypoint: [ "bash", "-c", "
    kafka-topics.sh --bootstrap-server $${BOOTSTRAP_SERVER} --list;
    for TOPIC in 'event-one-entry' 'event-two-entry'; do
      kafka-topics.sh --bootstrap-server $${BOOTSTRAP_SERVER} --create --if-not-exists --partitions 1 --config cleanup.policy='delete' --topic $${TOPIC}-dlt;
      for SUFFIX in '' '-retry'; do
        kafka-topics.sh --bootstrap-server $${BOOTSTRAP_SERVER} --create --if-not-exists --partitions $${PARTITION_COUNT} --config cleanup.policy='delete' --topic $${TOPIC}$${SUFFIX};
      done;
    done;
    exit 0;
    " ]
volumes:
  kafka_data:
    driver: local
