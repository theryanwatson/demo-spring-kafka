# Copyright VMware, Inc.
# SPDX-License-Identifier: APACHE-2.0

version: "2"

services:
  kafka:
    image: docker.io/bitnami/kafka:3.5
    ports:
      - "9091:9091"
      - "9092:9092"
    volumes:
      - "kafka_data:/bitnami"
    environment:
      # KRaft settings
      - KAFKA_CFG_NODE_ID=0
      - KAFKA_CFG_PROCESS_ROLES=controller,broker
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@kafka:9093
      # Listeners
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9091,CONTROLLER://:9093,EXTERNAL://:9092
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://:9091,EXTERNAL://localhost:9092
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,EXTERNAL:PLAINTEXT,PLAINTEXT:PLAINTEXT
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=PLAINTEXT
      - KAFKA_CFG_NUM_PARTITIONS=6
  kafka-setup:
    image: docker.io/bitnami/kafka:3.5
    depends_on:
      - kafka
    restart: "no"
    environment:
      - BOOTSTRAP_SERVER=kafka:9091
      - NUM_PARTITIONS=6
      - DLT_PARTITIONS=1
      # Comma-Delimited "Main" topics used to create topic sets, including -retry and -dlt
      - MAIN_TOPICS=event-test-one,event-test-two,event-test-three
    entrypoint: [ "bash", "-c", "
    kafka-topics.sh --bootstrap-server $${BOOTSTRAP_SERVER} --list;
    echo 'Creating topics';
    for TOPIC in $${MAIN_TOPICS//,/ }; do
      kafka-topics.sh --bootstrap-server $${BOOTSTRAP_SERVER} --create --if-not-exists --topic $${TOPIC}-dlt   --partitions $${DLT_PARTITIONS} --config delete.retention.ms=604800000;
      kafka-topics.sh --bootstrap-server $${BOOTSTRAP_SERVER} --create --if-not-exists --topic $${TOPIC}-retry --partitions $${NUM_PARTITIONS};
      kafka-topics.sh --bootstrap-server $${BOOTSTRAP_SERVER} --create --if-not-exists --topic $${TOPIC}       --partitions $${NUM_PARTITIONS} --config delete.retention.ms=259200000;
    done;
    exit 0;
    " ]
volumes:
  kafka_data:
    driver: local
